(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

{
  var _requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
  window.requestAnimationFrame = _requestAnimationFrame;
}

var mainCanvas = document.getElementById('rollAni');
var mcW = mainCanvas.offsetWidth;
var mcH = mainCanvas.offsetHeight;
// let mcW = 300;
// let mcH = 300;
var mainCtx = mainCanvas.getContext('2d');

var leftCanvas = document.createElement('canvas');
leftCanvas.width = 100;
leftCanvas.height = 100;
var leftCtx = leftCanvas.getContext('2d');

leftCtx.save();
leftCtx.fillStyle = 'green';
leftCtx.fillRect(0, 0, 100, 100);
leftCtx.restore();

var deg = 0;
// function clearDraw(){

// }
function aniPlayLoop() {
  console.log(mcW / 2, mcH);

  mainCtx.clearRect(0, 0, mcW, mcH);
  mainCtx.save();
  deg += 0.1;
  mainCtx.translate(mcW / 2, mcH / 2);
  mainCtx.rotate(deg * Math.PI / 180);
  mainCtx.translate(-mcW / 2, -mcH / 2);

  // mainCtx.drawImage(leftCanvas, -leftCanvas.width/2, -leftCanvas.height/2);
  mainCtx.drawImage(leftCanvas, mcW / 2 - leftCanvas.width / 2, mcH / 2 - leftCanvas.height / 2);
  mainCtx.restore();
  // mainCtx.translate(mcW / 2, mcH / 2);
  // mainCtx.rotate(deg * Math.PI / 180 * -1);
  // mainCtx.translate(-mcW / 2, -mcH / 2);
  mainCtx.drawImage(leftCanvas, 0 + deg * 10 + 60, 30 * Math.cos(deg * Math.PI) + 100);
  mainCtx.restore();
  requestAnimationFrame(aniPlayLoop);
}
aniPlayLoop();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZha2VfNDk4ODVmMjUuanMiXSwibmFtZXMiOlsicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwid2luZG93IiwibW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwid2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtYWluQ2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIm1jVyIsIm9mZnNldFdpZHRoIiwibWNIIiwib2Zmc2V0SGVpZ2h0IiwibWFpbkN0eCIsImdldENvbnRleHQiLCJsZWZ0Q2FudmFzIiwiY3JlYXRlRWxlbWVudCIsIndpZHRoIiwiaGVpZ2h0IiwibGVmdEN0eCIsInNhdmUiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInJlc3RvcmUiLCJkZWciLCJhbmlQbGF5TG9vcCIsImNvbnNvbGUiLCJsb2ciLCJjbGVhclJlY3QiLCJ0cmFuc2xhdGUiLCJyb3RhdGUiLCJNYXRoIiwiUEkiLCJkcmF3SW1hZ2UiLCJjb3MiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDRSxNQUFJQSx5QkFBd0JDLE9BQU9ELHFCQUFQLElBQWdDQyxPQUFPQyx3QkFBdkMsSUFDMUJELE9BQU9FLDJCQURtQixJQUNZRixPQUFPRyx1QkFEL0M7QUFFQUgsU0FBT0QscUJBQVAsR0FBK0JBLHNCQUEvQjtBQUNEOztBQUdELElBQUlLLGFBQWFDLFNBQVNDLGNBQVQsQ0FBd0IsU0FBeEIsQ0FBakI7QUFDQSxJQUFJQyxNQUFNSCxXQUFXSSxXQUFyQjtBQUNBLElBQUlDLE1BQU1MLFdBQVdNLFlBQXJCO0FBQ0E7QUFDQTtBQUNBLElBQUlDLFVBQVVQLFdBQVdRLFVBQVgsQ0FBc0IsSUFBdEIsQ0FBZDs7QUFFQSxJQUFJQyxhQUFhUixTQUFTUyxhQUFULENBQXVCLFFBQXZCLENBQWpCO0FBQ0FELFdBQVdFLEtBQVgsR0FBbUIsR0FBbkI7QUFDQUYsV0FBV0csTUFBWCxHQUFvQixHQUFwQjtBQUNBLElBQUlDLFVBQVVKLFdBQVdELFVBQVgsQ0FBc0IsSUFBdEIsQ0FBZDs7QUFFQUssUUFBUUMsSUFBUjtBQUNBRCxRQUFRRSxTQUFSLEdBQW9CLE9BQXBCO0FBQ0FGLFFBQVFHLFFBQVIsQ0FBaUIsQ0FBakIsRUFBb0IsQ0FBcEIsRUFBdUIsR0FBdkIsRUFBNEIsR0FBNUI7QUFDQUgsUUFBUUksT0FBUjs7QUFFQSxJQUFJQyxNQUFNLENBQVY7QUFDQTs7QUFFQTtBQUNBLFNBQVNDLFdBQVQsR0FBdUI7QUFDckJDLFVBQVFDLEdBQVIsQ0FBWWxCLE1BQU0sQ0FBbEIsRUFBcUJFLEdBQXJCOztBQUVBRSxVQUFRZSxTQUFSLENBQWtCLENBQWxCLEVBQXFCLENBQXJCLEVBQXdCbkIsR0FBeEIsRUFBNkJFLEdBQTdCO0FBQ0FFLFVBQVFPLElBQVI7QUFDQUksU0FBTyxHQUFQO0FBQ0FYLFVBQVFnQixTQUFSLENBQWtCcEIsTUFBTSxDQUF4QixFQUEyQkUsTUFBTSxDQUFqQztBQUNBRSxVQUFRaUIsTUFBUixDQUFlTixNQUFNTyxLQUFLQyxFQUFYLEdBQWdCLEdBQS9CO0FBQ0FuQixVQUFRZ0IsU0FBUixDQUFrQixDQUFDcEIsR0FBRCxHQUFPLENBQXpCLEVBQTRCLENBQUNFLEdBQUQsR0FBTyxDQUFuQzs7QUFFQTtBQUNBRSxVQUFRb0IsU0FBUixDQUFrQmxCLFVBQWxCLEVBQThCTixNQUFNLENBQU4sR0FBVU0sV0FBV0UsS0FBWCxHQUFtQixDQUEzRCxFQUE4RE4sTUFBTSxDQUFOLEdBQVVJLFdBQVdHLE1BQVgsR0FBb0IsQ0FBNUY7QUFDQUwsVUFBUVUsT0FBUjtBQUNBO0FBQ0E7QUFDQTtBQUNBVixVQUFRb0IsU0FBUixDQUFrQmxCLFVBQWxCLEVBQThCLElBQUVTLE1BQUksRUFBTixHQUFTLEVBQXZDLEVBQTJDLEtBQUtPLEtBQUtHLEdBQUwsQ0FBU1YsTUFBTU8sS0FBS0MsRUFBcEIsQ0FBTCxHQUE2QixHQUF4RTtBQUNBbkIsVUFBUVUsT0FBUjtBQUNBdEIsd0JBQXNCd0IsV0FBdEI7QUFDRDtBQUNEQSIsImZpbGUiOiJmYWtlXzQ5ODg1ZjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsie1xuICBsZXQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cubXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWU7XG4gIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWU7XG59XG5cblxubGV0IG1haW5DYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9sbEFuaScpO1xubGV0IG1jVyA9IG1haW5DYW52YXMub2Zmc2V0V2lkdGg7XG5sZXQgbWNIID0gbWFpbkNhbnZhcy5vZmZzZXRIZWlnaHQ7XG4vLyBsZXQgbWNXID0gMzAwO1xuLy8gbGV0IG1jSCA9IDMwMDtcbmxldCBtYWluQ3R4ID0gbWFpbkNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuXG5sZXQgbGVmdENhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xubGVmdENhbnZhcy53aWR0aCA9IDEwMDtcbmxlZnRDYW52YXMuaGVpZ2h0ID0gMTAwO1xubGV0IGxlZnRDdHggPSBsZWZ0Q2FudmFzLmdldENvbnRleHQoJzJkJyk7XG5cbmxlZnRDdHguc2F2ZSgpO1xubGVmdEN0eC5maWxsU3R5bGUgPSAnZ3JlZW4nO1xubGVmdEN0eC5maWxsUmVjdCgwLCAwLCAxMDAsIDEwMCk7XG5sZWZ0Q3R4LnJlc3RvcmUoKTtcblxubGV0IGRlZyA9IDA7XG4vLyBmdW5jdGlvbiBjbGVhckRyYXcoKXtcblxuLy8gfVxuZnVuY3Rpb24gYW5pUGxheUxvb3AoKSB7XG4gIGNvbnNvbGUubG9nKG1jVyAvIDIsIG1jSCk7XG5cbiAgbWFpbkN0eC5jbGVhclJlY3QoMCwgMCwgbWNXLCBtY0gpO1xuICBtYWluQ3R4LnNhdmUoKTtcbiAgZGVnICs9IDAuMTtcbiAgbWFpbkN0eC50cmFuc2xhdGUobWNXIC8gMiwgbWNIIC8gMik7XG4gIG1haW5DdHgucm90YXRlKGRlZyAqIE1hdGguUEkgLyAxODApO1xuICBtYWluQ3R4LnRyYW5zbGF0ZSgtbWNXIC8gMiwgLW1jSCAvIDIpO1xuXG4gIC8vIG1haW5DdHguZHJhd0ltYWdlKGxlZnRDYW52YXMsIC1sZWZ0Q2FudmFzLndpZHRoLzIsIC1sZWZ0Q2FudmFzLmhlaWdodC8yKTtcbiAgbWFpbkN0eC5kcmF3SW1hZ2UobGVmdENhbnZhcywgbWNXIC8gMiAtIGxlZnRDYW52YXMud2lkdGggLyAyLCBtY0ggLyAyIC0gbGVmdENhbnZhcy5oZWlnaHQgLyAyKTtcbiAgbWFpbkN0eC5yZXN0b3JlKCk7XG4gIC8vIG1haW5DdHgudHJhbnNsYXRlKG1jVyAvIDIsIG1jSCAvIDIpO1xuICAvLyBtYWluQ3R4LnJvdGF0ZShkZWcgKiBNYXRoLlBJIC8gMTgwICogLTEpO1xuICAvLyBtYWluQ3R4LnRyYW5zbGF0ZSgtbWNXIC8gMiwgLW1jSCAvIDIpO1xuICBtYWluQ3R4LmRyYXdJbWFnZShsZWZ0Q2FudmFzLCAwK2RlZyoxMCs2MCwgMzAgKiBNYXRoLmNvcyhkZWcgKiBNYXRoLlBJKSsxMDApO1xuICBtYWluQ3R4LnJlc3RvcmUoKTtcbiAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGFuaVBsYXlMb29wKTtcbn1cbmFuaVBsYXlMb29wKCk7XG4iXX0=
},{}]},{},[1])